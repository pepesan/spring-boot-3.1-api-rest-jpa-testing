
    create sequence alumnos_seq start with 1 increment by 50;

    create sequence book_seq start with 1 increment by 50;

    create sequence gender_seq start with 1 increment by 50;

    create sequence phone_details_seq start with 1 increment by 50;

    create sequence phone_seq start with 1 increment by 50;

    create sequence roles_seq start with 1 increment by 50;

    create sequence users_seq start with 1 increment by 50;

    create table addresses (
        id bigint generated by default as identity,
        order_id bigint unique,
        street varchar(255),
        primary key (id)
    );

    create table alumnos (
        edad integer check (edad>=18),
        id bigint not null,
        nombre varchar(20),
        apellidos varchar(255),
        primary key (id)
    );

    create table book (
        gender_id bigint,
        id bigint not null,
        title varchar(255),
        primary key (id)
    );

    create table gender (
        id bigint not null,
        name varchar(255),
        primary key (id)
    );

    create table orders (
        id bigint generated by default as identity,
        code varchar(255),
        primary key (id)
    );

    create table phone (
        details_id bigint unique,
        id bigint not null,
        "number" varchar(255),
        primary key (id)
    );

    create table phone_details (
        id bigint not null,
        provider varchar(255),
        technology varchar(255),
        primary key (id)
    );

    create table roles (
        id bigint not null,
        name varchar(255),
        primary key (id)
    );

    create table users (
        id bigint not null,
        first_name varchar(255),
        primary key (id)
    );

    create table users_roles (
        role_id bigint not null,
        user_id bigint not null,
        primary key (role_id, user_id)
    );

    alter table if exists addresses 
       add constraint FKsv7a6xjwuwlcwxbq98p0gqna 
       foreign key (order_id) 
       references orders;

    alter table if exists book 
       add constraint FK6619yl843qdq6ffpesr90c52v 
       foreign key (gender_id) 
       references gender;

    alter table if exists phone 
       add constraint FKso51a1txs2exaklk85pa5g4b5 
       foreign key (details_id) 
       references phone_details;

    alter table if exists users_roles 
       add constraint FKj6m8fwv7oqv74fcehir1a9ffy 
       foreign key (role_id) 
       references roles;

    alter table if exists users_roles 
       add constraint FK2o0jvgh89lemvvo17cbqvdxaa 
       foreign key (user_id) 
       references users;

    create sequence alumnos_seq start with 1 increment by 50;

    create sequence book_seq start with 1 increment by 50;

    create sequence gender_seq start with 1 increment by 50;

    create sequence phone_details_seq start with 1 increment by 50;

    create sequence phone_seq start with 1 increment by 50;

    create sequence roles_seq start with 1 increment by 50;

    create sequence users_seq start with 1 increment by 50;

    create table addresses (
        id bigint generated by default as identity,
        order_id bigint unique,
        street varchar(255),
        primary key (id)
    );

    create table alumnos (
        edad integer check (edad>=18),
        id bigint not null,
        nombre varchar(20),
        apellidos varchar(255),
        primary key (id)
    );

    create table book (
        gender_id bigint,
        id bigint not null,
        title varchar(255),
        primary key (id)
    );

    create table gender (
        id bigint not null,
        name varchar(255),
        primary key (id)
    );

    create table orders (
        id bigint generated by default as identity,
        code varchar(255),
        primary key (id)
    );

    create table phone (
        details_id bigint unique,
        id bigint not null,
        "number" varchar(255),
        primary key (id)
    );

    create table phone_details (
        id bigint not null,
        provider varchar(255),
        technology varchar(255),
        primary key (id)
    );

    create table roles (
        id bigint not null,
        name varchar(255),
        primary key (id)
    );

    create table users (
        id bigint not null,
        first_name varchar(255),
        primary key (id)
    );

    create table users_roles (
        role_id bigint not null,
        user_id bigint not null,
        primary key (role_id, user_id)
    );

    alter table if exists addresses 
       add constraint FKsv7a6xjwuwlcwxbq98p0gqna 
       foreign key (order_id) 
       references orders;

    alter table if exists book 
       add constraint FK6619yl843qdq6ffpesr90c52v 
       foreign key (gender_id) 
       references gender;

    alter table if exists phone 
       add constraint FKso51a1txs2exaklk85pa5g4b5 
       foreign key (details_id) 
       references phone_details;

    alter table if exists users_roles 
       add constraint FKj6m8fwv7oqv74fcehir1a9ffy 
       foreign key (role_id) 
       references roles;

    alter table if exists users_roles 
       add constraint FK2o0jvgh89lemvvo17cbqvdxaa 
       foreign key (user_id) 
       references users;

    create sequence alumnos_seq start with 1 increment by 50;

    create sequence book_seq start with 1 increment by 50;

    create sequence gender_seq start with 1 increment by 50;

    create sequence phone_details_seq start with 1 increment by 50;

    create sequence phone_seq start with 1 increment by 50;

    create sequence roles_seq start with 1 increment by 50;

    create sequence users_seq start with 1 increment by 50;

    create table addresses (
        id bigint generated by default as identity,
        order_id bigint unique,
        street varchar(255),
        primary key (id)
    );

    create table alumnos (
        edad integer check (edad>=18),
        id bigint not null,
        nombre varchar(20),
        apellidos varchar(255),
        primary key (id)
    );

    create table book (
        gender_id bigint,
        id bigint not null,
        title varchar(255),
        primary key (id)
    );

    create table gender (
        id bigint not null,
        name varchar(255),
        primary key (id)
    );

    create table orders (
        id bigint generated by default as identity,
        code varchar(255),
        primary key (id)
    );

    create table phone (
        details_id bigint unique,
        id bigint not null,
        "number" varchar(255),
        primary key (id)
    );

    create table phone_details (
        id bigint not null,
        provider varchar(255),
        technology varchar(255),
        primary key (id)
    );

    create table roles (
        id bigint not null,
        name varchar(255),
        primary key (id)
    );

    create table users (
        id bigint not null,
        first_name varchar(255),
        primary key (id)
    );

    create table users_roles (
        role_id bigint not null,
        user_id bigint not null,
        primary key (role_id, user_id)
    );

    alter table if exists addresses 
       add constraint FKsv7a6xjwuwlcwxbq98p0gqna 
       foreign key (order_id) 
       references orders;

    alter table if exists book 
       add constraint FK6619yl843qdq6ffpesr90c52v 
       foreign key (gender_id) 
       references gender;

    alter table if exists phone 
       add constraint FKso51a1txs2exaklk85pa5g4b5 
       foreign key (details_id) 
       references phone_details;

    alter table if exists users_roles 
       add constraint FKj6m8fwv7oqv74fcehir1a9ffy 
       foreign key (role_id) 
       references roles;

    alter table if exists users_roles 
       add constraint FK2o0jvgh89lemvvo17cbqvdxaa 
       foreign key (user_id) 
       references users;

    create sequence alumnos_seq start with 1 increment by 50;

    create sequence book_seq start with 1 increment by 50;

    create sequence gender_seq start with 1 increment by 50;

    create sequence phone_details_seq start with 1 increment by 50;

    create sequence phone_seq start with 1 increment by 50;

    create sequence roles_seq start with 1 increment by 50;

    create sequence users_seq start with 1 increment by 50;

    create table addresses (
        id bigint generated by default as identity,
        order_id bigint unique,
        street varchar(255),
        primary key (id)
    );

    create table alumnos (
        edad integer check (edad>=18),
        id bigint not null,
        nombre varchar(20),
        apellidos varchar(255),
        primary key (id)
    );

    create table book (
        gender_id bigint,
        id bigint not null,
        title varchar(255),
        primary key (id)
    );

    create table gender (
        id bigint not null,
        name varchar(255),
        primary key (id)
    );

    create table orders (
        id bigint generated by default as identity,
        code varchar(255),
        primary key (id)
    );

    create table phone (
        details_id bigint unique,
        id bigint not null,
        "number" varchar(255),
        primary key (id)
    );

    create table phone_details (
        id bigint not null,
        provider varchar(255),
        technology varchar(255),
        primary key (id)
    );

    create table roles (
        id bigint not null,
        name varchar(255),
        primary key (id)
    );

    create table users (
        id bigint not null,
        first_name varchar(255),
        primary key (id)
    );

    create table users_roles (
        role_id bigint not null,
        user_id bigint not null,
        primary key (role_id, user_id)
    );

    alter table if exists addresses 
       add constraint FKsv7a6xjwuwlcwxbq98p0gqna 
       foreign key (order_id) 
       references orders;

    alter table if exists book 
       add constraint FK6619yl843qdq6ffpesr90c52v 
       foreign key (gender_id) 
       references gender;

    alter table if exists phone 
       add constraint FKso51a1txs2exaklk85pa5g4b5 
       foreign key (details_id) 
       references phone_details;

    alter table if exists users_roles 
       add constraint FKj6m8fwv7oqv74fcehir1a9ffy 
       foreign key (role_id) 
       references roles;

    alter table if exists users_roles 
       add constraint FK2o0jvgh89lemvvo17cbqvdxaa 
       foreign key (user_id) 
       references users;

    create sequence alumnos_seq start with 1 increment by 50;

    create sequence book_seq start with 1 increment by 50;

    create sequence gender_seq start with 1 increment by 50;

    create sequence phone_details_seq start with 1 increment by 50;

    create sequence phone_seq start with 1 increment by 50;

    create sequence roles_seq start with 1 increment by 50;

    create sequence users_seq start with 1 increment by 50;

    create table addresses (
        id bigint generated by default as identity,
        order_id bigint unique,
        street varchar(255),
        primary key (id)
    );

    create table alumnos (
        edad integer check (edad>=18),
        id bigint not null,
        nombre varchar(20),
        apellidos varchar(255),
        primary key (id)
    );

    create table book (
        gender_id bigint,
        id bigint not null,
        title varchar(255),
        primary key (id)
    );

    create table gender (
        id bigint not null,
        name varchar(255),
        primary key (id)
    );

    create table orders (
        id bigint generated by default as identity,
        code varchar(255),
        primary key (id)
    );

    create table phone (
        details_id bigint unique,
        id bigint not null,
        "number" varchar(255),
        primary key (id)
    );

    create table phone_details (
        id bigint not null,
        provider varchar(255),
        technology varchar(255),
        primary key (id)
    );

    create table roles (
        id bigint not null,
        name varchar(255),
        primary key (id)
    );

    create table users (
        id bigint not null,
        first_name varchar(255),
        primary key (id)
    );

    create table users_roles (
        role_id bigint not null,
        user_id bigint not null,
        primary key (role_id, user_id)
    );

    alter table if exists addresses 
       add constraint FKsv7a6xjwuwlcwxbq98p0gqna 
       foreign key (order_id) 
       references orders;

    alter table if exists book 
       add constraint FK6619yl843qdq6ffpesr90c52v 
       foreign key (gender_id) 
       references gender;

    alter table if exists phone 
       add constraint FKso51a1txs2exaklk85pa5g4b5 
       foreign key (details_id) 
       references phone_details;

    alter table if exists users_roles 
       add constraint FKj6m8fwv7oqv74fcehir1a9ffy 
       foreign key (role_id) 
       references roles;

    alter table if exists users_roles 
       add constraint FK2o0jvgh89lemvvo17cbqvdxaa 
       foreign key (user_id) 
       references users;

    create sequence alumnos_seq start with 1 increment by 50;

    create sequence book_seq start with 1 increment by 50;

    create sequence gender_seq start with 1 increment by 50;

    create sequence phone_details_seq start with 1 increment by 50;

    create sequence phone_seq start with 1 increment by 50;

    create sequence roles_seq start with 1 increment by 50;

    create sequence users_seq start with 1 increment by 50;

    create table addresses (
        id bigint generated by default as identity,
        order_id bigint unique,
        street varchar(255),
        primary key (id)
    );

    create table alumnos (
        edad integer check (edad>=18),
        id bigint not null,
        nombre varchar(20),
        apellidos varchar(255),
        primary key (id)
    );

    create table book (
        gender_id bigint,
        id bigint not null,
        title varchar(255),
        primary key (id)
    );

    create table gender (
        id bigint not null,
        name varchar(255),
        primary key (id)
    );

    create table orders (
        id bigint generated by default as identity,
        code varchar(255),
        primary key (id)
    );

    create table phone (
        details_id bigint unique,
        id bigint not null,
        "number" varchar(255),
        primary key (id)
    );

    create table phone_details (
        id bigint not null,
        provider varchar(255),
        technology varchar(255),
        primary key (id)
    );

    create table roles (
        id bigint not null,
        name varchar(255),
        primary key (id)
    );

    create table users (
        id bigint not null,
        first_name varchar(255),
        primary key (id)
    );

    create table users_roles (
        role_id bigint not null,
        user_id bigint not null,
        primary key (role_id, user_id)
    );

    alter table if exists addresses 
       add constraint FKsv7a6xjwuwlcwxbq98p0gqna 
       foreign key (order_id) 
       references orders;

    alter table if exists book 
       add constraint FK6619yl843qdq6ffpesr90c52v 
       foreign key (gender_id) 
       references gender;

    alter table if exists phone 
       add constraint FKso51a1txs2exaklk85pa5g4b5 
       foreign key (details_id) 
       references phone_details;

    alter table if exists users_roles 
       add constraint FKj6m8fwv7oqv74fcehir1a9ffy 
       foreign key (role_id) 
       references roles;

    alter table if exists users_roles 
       add constraint FK2o0jvgh89lemvvo17cbqvdxaa 
       foreign key (user_id) 
       references users;

    create sequence alumnos_seq start with 1 increment by 50;

    create sequence book_seq start with 1 increment by 50;

    create sequence gender_seq start with 1 increment by 50;

    create sequence phone_details_seq start with 1 increment by 50;

    create sequence phone_seq start with 1 increment by 50;

    create sequence roles_seq start with 1 increment by 50;

    create sequence users_seq start with 1 increment by 50;

    create table addresses (
        id bigint generated by default as identity,
        order_id bigint unique,
        street varchar(255),
        primary key (id)
    );

    create table alumnos (
        edad integer check (edad>=18),
        id bigint not null,
        nombre varchar(20),
        apellidos varchar(255),
        primary key (id)
    );

    create table book (
        gender_id bigint,
        id bigint not null,
        title varchar(255),
        primary key (id)
    );

    create table gender (
        id bigint not null,
        name varchar(255),
        primary key (id)
    );

    create table orders (
        id bigint generated by default as identity,
        code varchar(255),
        primary key (id)
    );

    create table phone (
        details_id bigint unique,
        id bigint not null,
        "number" varchar(255),
        primary key (id)
    );

    create table phone_details (
        id bigint not null,
        provider varchar(255),
        technology varchar(255),
        primary key (id)
    );

    create table roles (
        id bigint not null,
        name varchar(255),
        primary key (id)
    );

    create table users (
        id bigint not null,
        first_name varchar(255),
        primary key (id)
    );

    create table users_roles (
        role_id bigint not null,
        user_id bigint not null,
        primary key (role_id, user_id)
    );

    alter table if exists addresses 
       add constraint FKsv7a6xjwuwlcwxbq98p0gqna 
       foreign key (order_id) 
       references orders;

    alter table if exists book 
       add constraint FK6619yl843qdq6ffpesr90c52v 
       foreign key (gender_id) 
       references gender;

    alter table if exists phone 
       add constraint FKso51a1txs2exaklk85pa5g4b5 
       foreign key (details_id) 
       references phone_details;

    alter table if exists users_roles 
       add constraint FKj6m8fwv7oqv74fcehir1a9ffy 
       foreign key (role_id) 
       references roles;

    alter table if exists users_roles 
       add constraint FK2o0jvgh89lemvvo17cbqvdxaa 
       foreign key (user_id) 
       references users;

    create sequence alumnos_seq start with 1 increment by 50;

    create sequence book_seq start with 1 increment by 50;

    create sequence gender_seq start with 1 increment by 50;

    create sequence phone_details_seq start with 1 increment by 50;

    create sequence phone_seq start with 1 increment by 50;

    create sequence roles_seq start with 1 increment by 50;

    create sequence users_seq start with 1 increment by 50;

    create table addresses (
        id bigint generated by default as identity,
        order_id bigint unique,
        street varchar(255),
        primary key (id)
    );

    create table alumnos (
        edad integer check (edad>=18),
        id bigint not null,
        nombre varchar(20),
        apellidos varchar(255),
        primary key (id)
    );

    create table book (
        gender_id bigint,
        id bigint not null,
        title varchar(255),
        primary key (id)
    );

    create table gender (
        id bigint not null,
        name varchar(255),
        primary key (id)
    );

    create table orders (
        id bigint generated by default as identity,
        code varchar(255),
        primary key (id)
    );

    create table phone (
        details_id bigint unique,
        id bigint not null,
        "number" varchar(255),
        primary key (id)
    );

    create table phone_details (
        id bigint not null,
        provider varchar(255),
        technology varchar(255),
        primary key (id)
    );

    create table roles (
        id bigint not null,
        name varchar(255),
        primary key (id)
    );

    create table users (
        id bigint not null,
        first_name varchar(255),
        primary key (id)
    );

    create table users_roles (
        role_id bigint not null,
        user_id bigint not null,
        primary key (role_id, user_id)
    );

    alter table if exists addresses 
       add constraint FKsv7a6xjwuwlcwxbq98p0gqna 
       foreign key (order_id) 
       references orders;

    alter table if exists book 
       add constraint FK6619yl843qdq6ffpesr90c52v 
       foreign key (gender_id) 
       references gender;

    alter table if exists phone 
       add constraint FKso51a1txs2exaklk85pa5g4b5 
       foreign key (details_id) 
       references phone_details;

    alter table if exists users_roles 
       add constraint FKj6m8fwv7oqv74fcehir1a9ffy 
       foreign key (role_id) 
       references roles;

    alter table if exists users_roles 
       add constraint FK2o0jvgh89lemvvo17cbqvdxaa 
       foreign key (user_id) 
       references users;

    create sequence alumnos_seq start with 1 increment by 50;

    create sequence book_seq start with 1 increment by 50;

    create sequence gender_seq start with 1 increment by 50;

    create sequence phone_details_seq start with 1 increment by 50;

    create sequence phone_seq start with 1 increment by 50;

    create sequence roles_seq start with 1 increment by 50;

    create sequence users_seq start with 1 increment by 50;

    create table addresses (
        id bigint generated by default as identity,
        order_id bigint unique,
        street varchar(255),
        primary key (id)
    );

    create table alumnos (
        edad integer check (edad>=18),
        id bigint not null,
        nombre varchar(20),
        apellidos varchar(255),
        primary key (id)
    );

    create table book (
        gender_id bigint,
        id bigint not null,
        title varchar(255),
        primary key (id)
    );

    create table gender (
        id bigint not null,
        name varchar(255),
        primary key (id)
    );

    create table orders (
        id bigint generated by default as identity,
        code varchar(255),
        primary key (id)
    );

    create table phone (
        details_id bigint unique,
        id bigint not null,
        "number" varchar(255),
        primary key (id)
    );

    create table phone_details (
        id bigint not null,
        provider varchar(255),
        technology varchar(255),
        primary key (id)
    );

    create table roles (
        id bigint not null,
        name varchar(255),
        primary key (id)
    );

    create table users (
        id bigint not null,
        first_name varchar(255),
        primary key (id)
    );

    create table users_roles (
        role_id bigint not null,
        user_id bigint not null,
        primary key (role_id, user_id)
    );

    alter table if exists addresses 
       add constraint FKsv7a6xjwuwlcwxbq98p0gqna 
       foreign key (order_id) 
       references orders;

    alter table if exists book 
       add constraint FK6619yl843qdq6ffpesr90c52v 
       foreign key (gender_id) 
       references gender;

    alter table if exists phone 
       add constraint FKso51a1txs2exaklk85pa5g4b5 
       foreign key (details_id) 
       references phone_details;

    alter table if exists users_roles 
       add constraint FKj6m8fwv7oqv74fcehir1a9ffy 
       foreign key (role_id) 
       references roles;

    alter table if exists users_roles 
       add constraint FK2o0jvgh89lemvvo17cbqvdxaa 
       foreign key (user_id) 
       references users;
